<UserControl x:Class="Yomiage.GUI.Views.PhraseEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Yomiage.GUI.Views"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:graph="clr-namespace:Yomiage.GUI.Graph"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
             xmlns:conv="clr-namespace:Yomiage.GUI.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="KeyDown">
            <rp:EventToReactiveCommand Command="{Binding KeyDownCommand}">
                <conv:KeyDownConverter/>
            </rp:EventToReactiveCommand>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="戻る" InputGestureText="Ctrl+Z" Command="{Binding UndoCommand}"/>
            <MenuItem Header="進む" InputGestureText="Ctrl+Y" Command="{Binding RedoCommand}"/>
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>
        <GridSplitter Grid.Column="1" Grid.Row="1" Grid.RowSpan="3" Width="4"/>

        <!-- 発話内容と語尾 -->
        <DockPanel Grid.Row="0" Grid.Column="2" Margin="0,3,0,3">
            <ComboBox DockPanel.Dock="Right" Height="24" Margin="3,0,0,0" Width="85"
                      ItemsSource="{Binding EndChars}" SelectedItem="{Binding SelectedEndChar.Value}"/>
            <TextBox Text="{Binding OriginalText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="12" Height="24"/>
        </DockPanel>

        <!-- ボタン -->
        <DockPanel Grid.Row="2" Grid.Column="2">
            <Button Style="{StaticResource IconButton}" DockPanel.Dock="Right" IsEnabled="False" Visibility="Collapsed">
                <DockPanel>
                    <icon:PackIconBoxIcons Kind="SolidShareAlt" RotationAngle="90" Margin="0,0,4,0"/>
                    <TextBlock VerticalAlignment="Bottom">標準語に変換</TextBlock>
                </DockPanel>
            </Button>
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource IconButton}"
                        Command="{Binding PlayCommand}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Kind="RegularPlayCircle" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">再生</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}"
                        Command="{Binding StopCommand}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Kind="RegularStopCircle" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">停止</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}" Margin="18,0,6,0"
                        Command="{Binding RegisterCommand}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Kind="SolidSave" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">登録</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}"
                        Command="{Binding UnRegisterCommand}">
                    <DockPanel>
                        <icon:PackIconMaterial Kind="TrashCanOutline" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">登録解除</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}" Margin="0,0,6,0"
                        Command="{Binding RegisterCharaCommand}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Kind="SolidSave" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">キャラ登録</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}"
                        Command="{Binding OpenDialogCommand}" CommandParameter="PhraseListDialog">
                    <DockPanel>
                        <icon:PackIconMaterial Kind="FormatListBulletedSquare" Margin="0,0,6,0"/>
                        <TextBlock VerticalAlignment="Bottom">一覧</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}" Margin="18,0,6,0"
                        Command="{Binding ClearCommand}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Kind="RegularRefresh" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">元に戻す</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}" Command="{Binding UndoCommand}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Kind="RegularUndo" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">戻る</TextBlock>
                    </DockPanel>
                </Button>
                <Button Style="{StaticResource IconButton}" Command="{Binding RedoCommand}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Kind="RegularRedo" Margin="0,0,4,0"/>
                        <TextBlock VerticalAlignment="Bottom">進む</TextBlock>
                    </DockPanel>
                </Button>
            </StackPanel>
        </DockPanel>

        <!-- 左のタブ -->
        <ScrollViewer Grid.Row="1" Grid.RowSpan="2" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
            <StackPanel Margin="3,0,3,0">
                <StackPanel.Resources>
                    <Style TargetType="Border">
                        <Setter Property="Width" Value="5"/>
                        <Setter Property="BorderThickness" Value="5"/>
                        <Setter Property="Margin" Value="0,9,0,10"/>
                    </Style>
                </StackPanel.Resources>
                <DockPanel Visibility="{Binding AccentHide.Value, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox Name="AccentCheck"
                          IsChecked="True"
                          mah:CheckBoxHelper.CheckGlyphForegroundChecked="{DynamicResource MahApps.Brushes.ThemeForeground}"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{DynamicResource MahApps.Brushes.ThemeForeground}"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                    <Border BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        Visibility="{Binding AccentSelected.Value, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Button Style="{StaticResource IconButton}"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Accent"
                    Height="35" Margin="0,0,0,2" Padding="5,0,0,0" HorizontalContentAlignment="Left">
                        <DockPanel>
                            <icon:PackIconBoxIcons Kind="SolidShareAlt" RotationAngle="90" Margin="0,0,4,0"/>
                            <TextBlock VerticalAlignment="Bottom">アクセント</TextBlock>
                        </DockPanel>
                    </Button>
                </DockPanel>
                <DockPanel Visibility="{Binding VolumeSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox Name="VolumeCheck"
                          mah:CheckBoxHelper.CheckGlyphForegroundChecked="Firebrick"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="Firebrick"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Firebrick"
                          mah:CheckBoxHelper.CheckBackgroundStrokeChecked="Firebrick"
                          mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Firebrick"/>
                    <Border BorderBrush="Firebrick"
                        Visibility="{Binding VolumeSelected.Value, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Button Style="{StaticResource IconButton}"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Volume"
                    Height="35" Margin="0,0,0,2" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                            ToolTip="{Binding VolumeSetting.Value.Description}">
                        <DockPanel HorizontalAlignment="Stretch">
                            <icon:PackIconBoxIcons Kind="SolidMegaphone" Margin="0,0,4,0"/>
                            <TextBlock VerticalAlignment="Bottom" Text="{Binding VolumeSetting.Value.Name}"/>
                        </DockPanel>
                    </Button>
                </DockPanel>
                <DockPanel Visibility="{Binding SpeedSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox Name="SpeedCheck"
                          mah:CheckBoxHelper.CheckGlyphForegroundChecked="ForestGreen"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="ForestGreen"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="ForestGreen"
                          mah:CheckBoxHelper.CheckBackgroundStrokeChecked="ForestGreen"
                          mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="ForestGreen"/>
                    <Border BorderBrush="ForestGreen"
                        Visibility="{Binding SpeedSelected.Value, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Button Style="{StaticResource IconButton}"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Speed"
                    Height="35" Margin="0,0,0,2" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                            ToolTip="{Binding SpeedSetting.Value.Description}">
                        <DockPanel>
                            <icon:PackIconMaterial Kind="Speedometer" Margin="0,0,4,0"/>
                            <TextBlock VerticalAlignment="Bottom" Text="{Binding SpeedSetting.Value.Name}"/>
                        </DockPanel>
                    </Button>
                </DockPanel>
                <DockPanel Visibility="{Binding PitchSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox Name="PitchCheck"
                          mah:CheckBoxHelper.CheckGlyphForegroundChecked="Orange"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="Orange"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Orange"
                          mah:CheckBoxHelper.CheckBackgroundStrokeChecked="Orange"
                          mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Orange"/>
                    <Border BorderBrush="Orange"
                        Visibility="{Binding PitchSelected.Value, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Button Style="{StaticResource IconButton}"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Pitch"
                    Height="35" Margin="0,0,0,2" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                            ToolTip="{Binding PitchSetting.Value.Description}">
                        <DockPanel>
                            <icon:PackIconBoxIcons Kind="LogosYahoo" Margin="0,0,4,0"/>
                            <TextBlock VerticalAlignment="Bottom" Text="{Binding PitchSetting.Value.Name}"/>
                        </DockPanel>
                    </Button>
                </DockPanel>
                <DockPanel Visibility="{Binding EmphasisSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox Name="EmphasisCheck"
                          mah:CheckBoxHelper.CheckGlyphForegroundChecked="MediumOrchid"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="MediumOrchid"
                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="MediumOrchid"
                          mah:CheckBoxHelper.CheckBackgroundStrokeChecked="MediumOrchid"
                          mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="MediumOrchid"/>
                    <Border BorderBrush="MediumOrchid"
                        Visibility="{Binding EmphasisSelected.Value, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Button Style="{StaticResource IconButton}"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Emphasis"
                    Height="35" Margin="0,0,0,2" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                            ToolTip="{Binding EmphasisSetting.Value.Description}">
                        <DockPanel>
                            <icon:PackIconBoxIcons Kind="RegularPulse" Margin="0,0,4,0"/>
                            <TextBlock VerticalAlignment="Bottom" Text="{Binding EmphasisSetting.Value.Name}"/>
                        </DockPanel>
                    </Button>
                </DockPanel>

                <ItemsControl ItemsSource="{Binding AdditionalSettings}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel Visibility="{Binding Hide, Converter={InverseBoolToVisibilityConverter}}">
                                <CheckBox IsChecked="{Binding IsVisible.Value}"
                                          mah:CheckBoxHelper.CheckGlyphForegroundChecked="{Binding Color}"
                                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{Binding Color}"
                                          mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{Binding Color}"
                                          mah:CheckBoxHelper.CheckBackgroundStrokeChecked="{Binding Color}"
                                          mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="{Binding Color}"/>
                                <Border BorderBrush="{Binding Color}"
                                        Width="5"
                                        BorderThickness="5"
                                        Margin="0,9,0,10"
                                        Visibility="{Binding IsSelected.Value, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Button Style="{StaticResource IconButton}"
                                        Command="{Binding SelectCommand}"
                                        CommandParameter="{Binding Key}"
                                        Height="35" Margin="0,0,0,2" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                                        ToolTip="{Binding Description}">
                                    <DockPanel>
                                        <icon:PackIconBoxIcons Kind="{Binding IconKind}" Margin="0,0,4,0"/>
                                        <TextBlock VerticalAlignment="Bottom" Text="{Binding Name}"/>
                                    </DockPanel>
                                </Button>
                            </DockPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>


            </StackPanel>
        </ScrollViewer>

        <!-- 編集グラフ -->
        <ScrollViewer x:Name="scrollViewer"
                      Grid.Row="1" Grid.Column="2"
                      HorizontalScrollBarVisibility="Visible"
                      VerticalScrollBarVisibility="Hidden">
            <Grid Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  MouseWheel="ScrollViewer_MouseWheel">
                <Grid Background="DimGray" Height="15" VerticalAlignment="Top"/>
                <graph:PhraseGraph AccentSelected="{Binding AccentSelected.Value}"
                                   VolumeSelected="{Binding VolumeSelected.Value}"
                                   SpeedSelected="{Binding SpeedSelected.Value}"
                                   PitchSelected="{Binding PitchSelected.Value}"
                                   EmphasisSelected="{Binding EmphasisSelected.Value}"
                                   AccentVisible="{Binding IsChecked, ElementName=AccentCheck}"
                                   VolumeVisible="{Binding IsChecked, ElementName=VolumeCheck}"
                                   SpeedVisible="{Binding IsChecked, ElementName=SpeedCheck}"
                                   PitchVisible="{Binding IsChecked, ElementName=PitchCheck}"
                                   EmphasisVisible="{Binding IsChecked, ElementName=EmphasisCheck}"
                                   Phrase="{Binding Phrase.Value}"
                                   PlayPosition="{Binding PlayPosition.Value}"
                                   EngineConfig="{Binding EngineConfig.Value}"
                                   IsExtend="{Binding IsExtend.Value}"
                                   UpdateCommand="{Binding UpdateCommand}"
                                   Additionals="{Binding AdditionalSettings}"
                                   />
            </Grid>
        </ScrollViewer>

    </Grid>
</UserControl>
